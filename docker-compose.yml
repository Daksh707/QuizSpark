# QuizMaster Docker Compose - Production Ready Stack
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: quizmaster-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${PGDATABASE:-quizmaster}
      POSTGRES_USER: ${PGUSER:-postgres}
      POSTGRES_PASSWORD: ${PGPASSWORD:-postgres123}
    ports:
      - "${PGPORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/database/schema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - quizmaster-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: quizmaster-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    networks:
      - quizmaster-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis123}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # QuizMaster Application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: quizmaster-app
    restart: unless-stopped
    ports:
      - "${PORT:-5000}:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://${PGUSER:-postgres}:${PGPASSWORD:-postgres123}@postgres:5432/${PGDATABASE:-quizmaster}
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      SESSION_SECRET: ${SESSION_SECRET:-your-super-secret-session-key-change-in-production}
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: ${PGUSER:-postgres}
      PGPASSWORD: ${PGPASSWORD:-postgres123}
      PGDATABASE: ${PGDATABASE:-quizmaster}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quizmaster-network
    volumes:
      - app_uploads:/app/public/uploads
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional for production)
  nginx:
    image: nginx:alpine
    container_name: quizmaster-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs
    depends_on:
      - app
    networks:
      - quizmaster-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local

networks:
  quizmaster-network:
    driver: bridge